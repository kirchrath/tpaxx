swagger: "2.0"
info:
  version: "0.0.1"
  title: tPaxx allotment api
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /masterdata/hotel:
    x-swagger-router-controller: masterdata_hotel
    get:
      operationId: list
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/MasterdataHotelsListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      operationId: create
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/MasterdataHotel"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/MasterdataHotelDetailResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /masterdata/hotel/{code}:
    x-swagger-router-controller: masterdata_hotel
    get:
      operationId: get
      parameters:
        - name: code
          in: path
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/MasterdataHotelDetailResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      operationId: drop
      parameters:
        - name: code
          in: path
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      operationId: update
      parameters:
        - name: code
          in: path
          required: true
          type: string
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/MasterdataHotel"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/MasterdataHotelDetailResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  MasterdataHotelsListResponse:
    required:
      - data
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/MasterdataHotel"
      message:
        type: string

  MasterdataHotelDetailResponse:
    type: object
    properties:
      data:
        $ref: "#/definitions/MasterdataHotel"
      message:
        type: string
  GeneralResponse:
    type: object
    properties:
      message:
        type: string
      success:
        type: boolean
  ErrorResponse:
    type: object
    required:
      - message
    properties:
      message:
        type: [string, object]
  MasterdataHotel:
    type: object
    required:
      - code
      - name
    properties:
      code:
        type: string
      name:
        type: string
