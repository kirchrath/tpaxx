{
    /**
     * The name of the package.
     */
    "name": "tpaxx-core",

    /**
     * Alternate names for this package.
     *
     *    "alternateName": [],
     */
     
     /**
      * The namespace of this package.
      *
      * As a general rule, all classes that belong to this package should be under this namespace
      * if multiple namespaces are part of this package, set this to "".
      */
     "namespace": "tpaxx.packages.core",

    /**
     * The package type.
     *
     * Sencha Cmd understands the following types of packages:
     *  - code : An arbitrary package of code for use by applications or other packages.
     *  - theme : A package to be used as an applicationâ€™s theme.
     *  - locale : A package containing localization strings or locale-specific code.
     *  - template : A package containing one or more templates.
     */
    "type": "code",

    /**
     * The toolkit used by this theme (only for "theme" package type).
     *
     * Themes can specify the toolkit they apply to ("classic" or "modern").
     *
     *    "toolkit": "classic",
     */
    "toolkit": "classic",

     /**
      * The author of the package.
      *
      * Required only if you are distributing this package through a Sencha Cmd repository,
      * in which case it should match the name you assign to your local package repository.
      */
    "creator": "anonymous",

    /**
     * A summarized description of this package.
     */
    "summary": "Short summary",

    /**
     * A detailed description of this package.
     */
    "detailedDescription": "Long description of package",

    /**
     * The package version.
     *
     * Typically, changes to the package should come along with changes to the version.
     * This number should be in this format: d+(.d+)*
     */
    "version": "1.0.0",

    /**
     * The version that users can transparently update from without requiring code changes.
     *
     * In addition the version property, packages can also indicate the degree to which
     * they are backward compatible using the compatVersion property.
     */
    "compatVersion": "1.0.0",

    /**
     * Spec. version of this package.json file.
     * This is set automatically by Sencha Cmd when first generating this file
     */
    "format": "1",

    /**
     * Additional resources used during theme slicing operations
     */
    "slicer": {
        "js": [
            {
                "path": "${package.dir}/sass/example/custom.js",
                "isWidgetManifest": true
            }
        ]
    },

    /**
     * Controls the output directory.
     */
    "output": "${package.dir}/build",

    "local": true,

    "classpath": [
        "${package.dir}/src"
    ],
    "framework": "ext",
    "requires": []
}
